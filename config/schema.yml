propel:
  _attributes: { baseClass: opPropelRecord }

  member:
    name: { type: varchar(64), default: "", notnull: true, comment: "Nickname" }
    invite_member_id: { type: integer, comment: "Member id of the person who invited this member" }
    is_login_rejected: { type: boolean, notnull: true, default: false, comment: "Rejected member" }
    _propel_behaviors:
      op_activate:
      op_access_control:
    _foreignKeys:
      -
        foreignTable: member
        onDelete: set null
        references:
          - { local: invite_member_id, foreign: id }

  member_relationship:
    member_id_to: { type: integer, notnull: true, comment: "Target member id" }
    member_id_from: { type: integer, notnull: true, comment: "Subject member id" }
    is_friend: { type: boolean, comment: "The members are friends" }
    is_friend_pre: { type: boolean, comment: "The members are going to be friends" }
    is_access_block: { type: boolean, comment: "The subject member is blocked the target" }
#    _propel_behaviors:
#      op_activity_cascading:
    _foreignKeys:
      -
        foreignTable: member
        onDelete: cascade
        references:
          - { local: member_id_to, foreign: id }
      -
        foreignTable: member
        onDelete: cascade
        references:
          - { local: member_id_from, foreign: id }
    _uniques:
      member_id_to_from_UNIQUE: [member_id_to, member_id_from]
      member_id_from_to_UNIQUE: [member_id_from, member_id_to]

  member_image:
    member_id: { type: integer, notnull: true, comment: "Member id" }
    file_id: { type: integer, notnull: true, comment: "Image file id in the ''file'' table" }
    is_primary: { type: boolean, comment: "This is primary" }
    _foreignKeys:
      -
        foreignTable: member
        onDelete: cascade
        references:
          - { local: member_id, foreign: id }
      -
        foreignTable: file
        onDelete: cascade
        references:
          - { local: file_id, foreign: id }

  file:
    name: { type: varchar(64), default: "", notnull: true, comment: "File name" }
    type: { type: varchar(64), default: "", notnull: true, comment: "Type of this file" }
    filesize: { type: integer, default: 0, notnull: true, comment: "File size" }
    original_filename: { type: longvarchar, comment: "Original filename" }
    _uniques:
      name_UNIQUE: [name]

  file_bin:
    file_id: { type: integer, primaryKey: true, comment: "File id" }
    bin: { type: blob, comment: "Content of file" }
    _foreignKeys:
      -
        foreignTable: file
        onDelete: cascade
        references:
          - { local: file_id, foreign: id }

  profile:
    name: { type: varchar(64), default: "", notnull: true, comment: "Identified profile name (ASCII)" }
    is_required: { type: boolean, default: false, notnull: true, comment: "This is a required" }
    is_unique: { type: boolean, default: false, notnull: true, comment: "Cannot select duplicate item" }
    is_edit_public_flag: { type: boolean, default: false, notnull: true, comment: "Settable public flag" }
    default_public_flag: { type: integer, default: '1', notnull: true, comment: "Default of public flag" }
    form_type: { type: varchar(32), default: "", notnull: true, comment: "Form type to input/select" }
    value_type: { type: varchar(32), default: "", notnull: true, comment: "Type of input value" }
    is_disp_regist: { type: boolean, default: false, notnull: true, comment: "Shows when registeration" }
    is_disp_config: { type: boolean, default: false, notnull: true, comment: "Shows when edit" }
    is_disp_search: { type: boolean, default: false, notnull: true, comment: "Shows when searching" }
    is_public_web: { type: boolean, notnull: true, default: false, comment: "Flag for adding public_flag for publishing to web" }
    value_regexp: { type: longvarchar, comment: "Regular expression" }
    value_min: { type: varchar(32), comment: "Minimum value" }
    value_max: { type: varchar(32), comment: "Maximum value" }
    sort_order: { type: integer, comment: "Order to sort" }
    _uniques:
      name_UNIQUE: [name]

  profile_i18n:
    caption: { type: longvarchar, notnull: true, comment: "Item name to show" }
    info: { type: longvarchar, comment: "Description" }
    _propel_behaviors:
      timestampable:
        boolean: false

  profile_option:
    id: { type: integer, primary: true, autoincrement: true, comment: "Serial number" }
    profile_id: { type: integer, notnull: true, comment: "Profile id" }
    sort_order: { type: integer, comment: "Order to sort" }
    _foreignKeys:
      -
        foreignTable: profile
        onDelete: cascade
        references:
          - { local: profile_id, foreign: id }

  profile_option_i18n:
    value: { type: longvarchar, comment: "Choice" }

  member_profile:
    member_id: { type: integer, notnull: true, comment: "Member id" }
    profile_id: { type: integer, notnull: true, comment: "Profile id" }
    profile_option_id: { type: integer, comment: "Profile option id" }
    value: { type: longvarchar, notnull: true, comment: "Text content for this profile item" }
    value_datetime: { type: timestamp, comment: "Profile datetime value" }
    public_flag: { type: integer, comment: "Public flag" }
    _propel_behaviors:
      nested_set:
        use_scope: true
        scope_column: tree_key
      op_access_control:
    _foreignKeys:
      -
        foreignTable: member
        onDelete: cascade
        references:
          - { local: member_id, foreign: id }
      -
        foreignTable: profile
        onDelete: cascade
        references:
          - { local: profile_id, foreign: id }
      -
        foreignTable: profile_option
        onDelete: cascade
        references:
          - { local: profile_option_id, foreign: id }
#    _indexes:
#      lft_INDEX: [lft]

  community:
    name: { type: varchar(64), default: "", notnull: true, comment: "Community name" }
    file_id: { type: integer, comment: "Top image file id" }
    community_category_id: { type: integer, comment: "Community category id" }
    _foreignKeys:
      -
        foreignTable: file
        onDelete: set null
        references:
          - { local: file_id, foreign: id }
      -
        foreignTable: community_category
        onDelete: set null
        references:
          - { local: community_category_id, foreign: id }
    _uniques:
      name_UNIQUE: [name]

  community_member:
    community_id: { type: integer, notnull: true, comment: "Community id" }
    member_id: { type: integer, notnull: true, comment: "Member id" }
    is_pre: { type: boolean, notnull: true, default: false, comment: "Is pre member?" }
    is_receive_mail_pc: { type: boolean, default: false, notnull: true, comment: "Notification of posting in community by computer E-mail." }
    is_receive_mail_mobile: { type: boolean, default: false, notnull: true, comment: "Notification of posting in community by mobile E-mail." }
    _foreignKeys:
      -
        foreignTable: community
        onDelete: cascade
        references:
          - { local: community_id, foreign: id }
      -
        foreignTable: member
        onDelete: cascade
        references:
          - { local: member_id, foreign: id }

  community_member_position:
    community_id: { type: integer, notnull: true, comment: "Community id" }
    member_id:    { type: integer, notnull: true, comment: "Member id" }
    community_member_id: { type: integer, notnull: true, comment: "Community Member id" }
    name: { type: varchar(32), notnull: true, comment: "Member''s position name in this community" }
    _uniques:
      name_UNIQUE: [community_member_id, name]
    _foreignKeys:
      -
        foreignTable: community
        onDelete: cascade
        references:
          - { local: community_id, foreign: id }
      -
        foreignTable: member
        onDelete: cascade
        references:
          - { local: member_id, foreign: id }
      -
        foreignTable: community_member
        onDelete: cascade
        references:
          - { local: community_member_id, foreign: id }

  admin_user:
    username: { type: varchar(64), default: "", notnull: true, comment: "Administrator''s username" }
    password: { type: varchar(40), default: "", notnull: true, comment: "Administrator''s password" }
    _uniques:
      username_UNIQUE: [username]

  sns_config:
    name: { type: varchar(64), default: "", notnull: true, comment: "Configuration name" }
    value: { type: longvarchar, comment: "Configuration value" }
    _uniques:
      name_UNIQUE: [name]

  member_config:
    member_id: { type: integer, notnull: true, comment: "Member id" }
    name: { type: varchar(64), default: "", notnull: true, comment: "Configuration name" }
    value: { type: longvarchar, notnull: true, comment: "Configuration value" }
    value_datetime: { type: timestamp, comment: "Configuration datetime value" }
    name_value_hash: { type: varchar(32), notnull: true, comment: "Hash value for searching name & value" }
    _foreignKeys:
      -
        foreignTable: member
        onDelete: cascade
        references:
          - { local: member_id, foreign: id }
    _indexes:
      name_INDEX: [name]
      name_value_hash_INDEX: [name_value_hash]

  community_config:
    community_id: { type: integer, notnull: true, comment: "Community id" }
    name: { type: varchar(64), default: "", notnull: true, comment: "Configuration name" }
    value: { type: longvarchar, comment: "Configuration value" }
    _foreignKeys:
      -
        foreignTable: community
        onDelete: cascade
        references:
          - { local: community_id, foreign: id }

  community_category:
    name: { type: varchar(64), default: "", notnull: true, comment: "Category name" }
    is_allow_member_community: { type: boolean, default: true, notnull: true, comment: "Member can create this category community" }
    tree_key: { type: integer, comment: "Nested tree key" }
    sort_order: { type: integer, comment: "Order to sort" }
    _propel_behaviors:
      nested_set:
        use_scope: true
        scope_column: tree_key
#    _indexes:
#      lft_INDEX: [lft]

  gadget:
    type: { type: varchar(64), default: "", notnull: true, comment: "Gadget type" }
    name: { type: varchar(64), default: "", notnull: true, comment: "Gadget name" }
    sort_order: { type: integer, comment: "Order to sort" }
    _propel_behaviors:
      op_access_control:
    _indexes:
      sort_order_INDEX: [sort_order]

  gadget_config:
    name: { type: varchar(64), default: "", notnull: true, comment: "Configuration name" }
    gadget_id: { type: integer, comment: "Gadget id" }
    value: { type: longvarchar, comment: "Configuration value" }
    _foreignKeys:
      -
        foreignTable: gadget
        onDelete: cascade
        references:
          - { local: gadget_id, foreign: id }

  navigation:
    id: { type: integer, primary: true, autoincrement: true, comment: "Serial number" }
    type: { type: varchar(64), default: "", notnull: true, comment: "Navigation type" }
    uri: { type: longvarchar, notnull: true, comment: "Linked page''s URI" }
    sort_order: { type: integer, comment: "Order to sort" }
    _indexes:
      type_sort_order_INDEX: [type, sort_order]

  navigation_i18n:
    caption: { type: longvarchar, notnull: true, comment: "Description" }

  blacklist:
    uid: { type: varchar(32), default: "", notnull: true, comment: "Mobile identified number" }
    memo: { type: longvarchar, comment: "Free memo" }
    _uniques:
      uid_UNIQUE: [uid]

  oauth_consumer:
    _attributes: { phpName: OAuthConsumerInformation }
    name: { type: varchar(64), default: "", notnull: true, comment: "Consumer name" }
    description: { type: longvarchar, comment: "Consumer description" }
    key_string: { type: varchar(16), default: "", notnull: true, comment: "Token for this consumer" }
    secret: { type: varchar(32), default: "", notnull: true, comment: "Password for this consumer" }
    file_id: { type: integer, comment: "Image file id of this consumer" }
    using_apis: { type: array, comment: "API list that this consumer uses" }
    member_id: { type: integer, notnull: false, comment: "Member id" }
    _foreignKeys:
      -
        foreignTable: member
        onDelete: cascade
        references:
          - { local: member_id, foreign: id }
      -
        foreignTable: file
        onDelete: set null
        references:
          - { local: file_id, foreign: id }
    _uniques:
      key_secret_UNIQUE: [key_string, secret]

  oauth_abstract_token:
    _attributes: { phpName: OAuthAbstractToken }
    oauth_consumer_id: { type: integer, notnull: true, comment: "OAuth Consumer id" }
    key_string: { type: varchar(16), default: "", notnull: true, comment: "Key string of this token" }
    secret: { type: varchar(32), default: "", notnull: true, comment: "Secret string of this token" }
    type: { type: enum, valueSet: 'request,access', default: "request", comment: "Token type" }
    is_active: { type: boolean, default: true, notnull: true, comment: "Activation flag" }
    callback_url: { type: longvarchar, comment: "Callback url" }
    verifier: { type: longvarchar, comment: "Token verifier" }
    _foreignKeys:
      -
        foreignTable: oauth_consumer
        onDelete: cascade
        references:
          - { local: oauth_consumer_id, foreign: id }
    _uniques:
      key_secret_UNIQUE: [key_string, secret]

  oauth_admin_token:
    _attributes: { phpName: OAuthAdminToken }
    _propel_behaviors:
      concrete_inheritance:
        extends: oauth_abstract_token

  oauth_member_token:
    _attributes: { phpName: OAuthMemberToken }
    _propel_behaviors:
      concrete_inheritance:
        extends: oauth_abstract_token
    member_id: { type: integer, notnull: false, comment: "Member id" }
    _foreignKeys:
      -
        foreignTable: member
        onDelete: cascade
        references:
          - { local: member_id, foreign: id }

  banner:
    name: { type: varchar(64), default: "", notnull: true, comment: "Banner name" }
    html: { type: longvarchar, comment: "HTML of free input banner" }
    is_use_html: { type: boolean, default: false, notnull: true, comment: "This is free HTML banner" }
    _uniques:
      name_UNIQUE: [name]

  banner_i18n:
    caption: { type: longvarchar, notnull: true, comment: "Description" }

  banner_image:
    file_id: { type: integer, notnull: true, comment: "An image''s file id" }
    url: { type: longvarchar, comment: "URL of linked Web page" }
    name: { type: varchar(64), comment: "Banner image name" }
    _foreignKeys:
      -
        foreignTable: file
        onDelete: cascade
        references:
          - { local: file_id, foreign: id }

  banner_use_image:
    banner_id: { type: integer, notnull: true, comment: "Banner id" }
    banner_image_id: { type: integer, notnull: true, comment: "BannerImage id" }
    _foreignKeys:
      -
        foreignTable: banner
        onDelete: cascade
        references:
          - { local: banner_id, foreign: id }
      -
        foreignTable: banner_image
        references:
          - { local: banner_image_id, foreign: id }

  session:
    id: { type: varchar(128), primary: true }
    session_data: { type: longvarchar, comment: "Session information" }
    time: { type: longvarchar, comment: "Timestamp of generated time" }

  openid_trust_log:
    _attributes: { phpName: OpenIDTrustLog }
    member_id: { type: integer, notnull: false, comment: "Member id" }
    uri: { type: longvarchar, comment: "URI for RP" }
    uri_key: { type: varchar(32), comment: "Hashed URI for RP" }
    is_permanent: { type: boolean, comment: "A permanent flag" }
    _foreignKeys:
      -
        foreignTable: member
        onDelete: cascade
        references:
          - { local: member_id, foreign: id }
    _indexes:
      uri_key_INDEX: [uri_key]

  sns_term:
    name: { type: varchar(64), default: "", notnull: true, comment: "Term name" }
    application: { type: varchar(32), default: "pc_frontend", notnull: true, comment: "Application name" }
    _indexes:
      application_INDEX: [application]

  sns_term_i18n:
    value: { type: longvarchar, comment: "Term value" }

  notification_mail:
    name: { type: varchar(64), default: "", notnull: true, comment: "Notification Identifier Name" }
    renderer: { type: varchar(64), default: "twig", notnull: true, comment: "Notification Template Renderer" }
    is_enabled: { type: boolean, default: true, notnull: true, comment: "Notification Enabled" }
    _indexes:
      is_enabled_INDEX: [is_enabled]
    _uniques:
      name_UNIQUE: [name]

  notification_mail_i18n:
    title: { type: varchar(64), default: "", notnull: true, comment: "Notification Title" }
    template: { type: longvarchar, notnull: true, comment: "Notification Template" }

  plugin:
    name: { type: varchar(64), default: "", notnull: true, comment: "Nickname" }
    is_enabled: { type: boolean, default: true, notnull: true, comment: "Notification Enabled" }
    _indexes:
      is_enabled_INDEX_2: [is_enabled]
    _uniques:
      name_UNIQUE: [name]

  skin_config:
    plugin: { type: varchar(64), default: "", notnull: true, comment: "Plugin name" }
    name: { type: varchar(64), default: "", notnull: true, comment: "Configuration name" }
    value: { type: longvarchar, comment: "Configuration value" }
    _uniques:
      plugin_name_UNIQUE: [plugin, name]

  activity_data:
    member_id: { type: integer, notnull: true, comment: "Member id" }
    in_reply_to_activity_id: { type: integer, comment: "Activity data id is in reply to" }
    body: { type: varchar(140), notnull: true, comment: "Activity body" }
    uri: { type: longvarchar, comment: "Activity URI" }
    public_flag: { type: integer, notnull: true, default: 1, comment: "Public flag of activity" }
    is_pc: { type: boolean, notnull: true, default: 1, comment: "Display this in PC?" }
    is_mobile: { type: boolean, notnull: true, default: 1, comment: "Display this in Mobile?"} 
    source: { type: varchar(64), comment: "The source caption" }
    source_uri: { type: longvarchar, comment: "The source URI" }
    foreign_table: { type: longvarchar, comment: "Reference table name" }
    foreign_id: { type: integer, comment: "The id of reference table" }
    template: { type: varchar(64), comment: "Template name" }
    template_param: { type: array, comment: "Params for template" }
    _foreignKeys:
      -
        foreignTable: member
        onDelete: cascade
        references:
          - { local: member_id, foreign: id }
      -
        foreignTable: activity_data
        onDelete: cascade
        references:
          - { local: in_reply_to_activity_id, foreign: id }

  activity_image:
    activity_data_id: { type: integer, notnull: true, comment: "Activity data id" }
    mime_type: { type: varchar(64), notnull: true, comment: "MIME type" }
    uri: { type: longvarchar, comment: "Image URI" }
    file_id: { type: integer, comment: "File id" }
    _foreignKeys:
      -
        foreignTable: activity_data
        onDelete: cascade
        references:
          - { local: activity_data_id, foreign: id }
      -
        foreignTable: file
        onDelete: cascade
        references:
          - { local: file_id, foreign: id }
